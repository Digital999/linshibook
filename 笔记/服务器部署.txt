一:网络配置
	1:安装网络功能:yum install net-tools

	2:关闭centos7系统的防火墙:sudo systemctl stop firewalld.service

			         sudo systemctl disable firewalld.service
二:环境配置
	1:安装wget,用于网上下载文件:yum -y install wget

	2:GCC编译器环境,python3所需要的环境:yum -y install gcc

	3:python3使用的依赖组件:yum install openssl-devel bzip2-devel expat-devel gdbm-devel readline-devel sqlite*-devel mysql-devel

	4:下载python3.6.4安装包:wget https://www.python.org/ftp/python/3.6.4/Python-3.6.4.tgz

	5:解压安装包:tar -zxvf Python-3.6.4.tgz

	6:将python3编译到系统当中:1:cd Python-3.6.4 sudo ./configure  2:make  3:make install

三:部署uwsgi服务器(uwsgi是用来与项目绑定,负责uginx与项目之间的通信)

	1:安装依赖:pip3 install mysqlclient,pip3 install django,pip3 install uwsgi

	2:运行uwsgi指令:uwsgi --http :8090 --chdir /home/music -w music.wsgi测试uwsgi服务器是否能正常运行

	3:在项目根目录下添加配置文件  项目名_uwsgi.ini


四:部署nginx服务器

	1:添加nginx的安装源:rpm -ivh http://nginx.org/packages/centos/7/noarch/RPMS/nginx-release-centos-7-0.e17.ngx.noarch.rpm

	2:使用yum安装nginx:yum install nginx

	3:启动nginx服务器:systemctl start nginx       在本地浏览器输入公网ip可以看到nginx启动成功

	4:配置文件,切换路径到/etc/nginx/,编辑nginx.conf

	5:重启nginx,进入etc/nginx目录:sudo nginx -c nginx.conf
				      sudo nginx -s reload
	6:通过启动uwsgi配置文件完成整个项目的部署:uwsgi --ini 项目名_uwsgi.ini

五:docker的使用

	1:安装docker
		yum install -y docker
	2:查看是否安装成功
		yum list installd |grep docker
	3:启动docker服务
		systemctl start docker  启动
		systemctl restart docker 重启
	4:查看服务是否启动成功
		systemctl status docker
	5:查看docker已经安装的镜像
		docker images	
	6:查看docker容器
		docker ps -a 已创建的容器
		docker ps -s 已启动的容器
	7:使用docker安装mysql
		docker pill mysql:8.0
	8:启动docker中的镜像(这里已mysql为例)
		docker run --name mysql8.0 -p 3306:3306 -e MYSQL_ROOT_PASSWORD=abc123456 -d mysql:8.0